<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                                            http://www.springframework.org/schema/beans/spring-beans.xsd
                                            http://www.springframework.org/schema/tx
                                            http://www.springframework.org/schema/tx/spring-tx.xsd
                                            http://www.springframework.org/schema/aop
                                            http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--1.创建数据源datasource-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/spring_mybatis?characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="admin"/>
    </bean>

    <!--2.根据数据源创建sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--2.1依赖数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--2.2注入mapper配置文件：通用方式-->
        <property name="mapperLocations" value="classpath:com/chenzf/mapper/*.xml"/>
        <!--2.3注入别名相关配置：用来给指定包中所有类起别名-->
        <property name="typeAliasesPackage" value="com.chenzf.entity"/>
    </bean>

    <!--3.根据sqlSessionFactory创建DAO组件类：一次性创建所有DAO-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--扫描DAO接口所在包-->
        <property name="basePackage" value="com.chenzf.dao"/>
    </bean>


    <!--4.创建事务管理器（解决连接一致性安全问题）-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--5.根据事务管理器创建事务环绕通知：声明式-->
    <!--注意命名空间网址中是tx不是cache-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--事务细粒度控制-->
        <tx:attributes>
            <tx:method name="save*"/>
            <tx:method name="delete*"/>
            <tx:method name="update*"/>
        </tx:attributes>
    </tx:advice>

    <!--6.配置事务切面-->
    <aop:config>
        <aop:pointcut id="pc" expression="within(com.chenzf.service.*ServiceImpl)"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
    </aop:config>

    <!--7.管理Service层组件-->
    <bean id="userService" class="com.chenzf.service.UserServiceImpl">
        <!--注入DAO-->
        <property name="userDAO" ref="userDAO"/>
    </bean>

</beans>